Vector DB -
* In a vector db, the info is stored as an array of numbers
* Similar things will have similar vectors
* Different things are stored far away in vector space
* Multimedia can be converted into vectors easily
* So when we need a similar image, the similar vectors are queried
* Similarity search for text, images, audio or video data

032 -----
RAG - Retrieval Augmentation Generation
* The query is plugged with a context that is fetched from a vector db
Embeddings -
* Everything can be converted into text, be it image, audio etc
* Create a vectoric space from the text
* The distance between vectors have a certain meaning
* Vectors can represent complex objects
* In a continuous high dimensional space, called embedding
* Text -> Encoder/Embedding Model -> Vector

034 -----
Pinecone is the current most used vector db solution
Steps involved -
* Loading the blog - TextLoader
* Splitting the blog into smaller chunks - TextSplitter
* Embed the chunks and get vectors - OpenAIEmbeddings
* Store the embeddings in pinecone vector store - PineconeVectorStore

035 -----
Steps involved -
* Create query and llm
* Create an instance of vector store - PineconeVectorStore, provide
 the index and embeddings
* Combine the docs
* Create chain with vector store and docs combined
* Vector store is the info fetched from database, so it is provided
 as the context to the question asked
* Invoke and fetch

036 -----
* Do 035 using LCEL
chain = {} | prompt | llm | output_parser